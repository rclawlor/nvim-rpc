use rmpv::Value;

use crate::api::*;
use crate::error::Error;
use crate::value_vec;

/// The below implementations are autogenerated using the Neovim API
impl Tabpage {
    /// Since: 1
    pub fn list_wins(&mut self) -> Result<Value, Error> {
        self.session.call("nvim_tabpage_list_wins", Vec::new())
    }

    /// Since: 1
    pub fn get_var(&mut self, name: String) -> Result<Value, Error> {
        self.session.call("nvim_tabpage_get_var", value_vec!(name))
    }

    /// Since: 1
    pub fn set_var(&mut self, name: String, value: Value) -> Result<Value, Error> {
        self.session
            .call("nvim_tabpage_set_var", value_vec!(name, value))
    }

    /// Since: 1
    pub fn del_var(&mut self, name: String) -> Result<Value, Error> {
        self.session.call("nvim_tabpage_del_var", value_vec!(name))
    }

    /// Since: 1
    pub fn get_win(&mut self) -> Result<Value, Error> {
        self.session.call("nvim_tabpage_get_win", Vec::new())
    }

    /// Since: 1
    pub fn get_number(&mut self) -> Result<Value, Error> {
        self.session.call("nvim_tabpage_get_number", Vec::new())
    }

    /// Since: 1
    pub fn is_valid(&mut self) -> Result<Value, Error> {
        self.session.call("nvim_tabpage_is_valid", Vec::new())
    }
}
